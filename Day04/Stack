package sample;

public class Stack {

		int[] stack;
		int top;
		int capacity;
		
		public Stack(int capacity) {
			this.stack=new int [capacity];
			this.top=-1;
			this.capacity=capacity;
		}
		
		public void push(int element) {
			if(isFull()) {
				System.out.println("stack overflow");
				return;
			}
			stack[++top]=element;
		}
		public int pop() {
			if(isEmpty()) {
				System.out.println("stack underflow");
				return -1;
			}
			int element=stack[top--];
			return element;
		}
		public boolean isFull() {
			return top==capacity-1;
		}
		public boolean isEmpty() {
			return top==-1;
		}
		public void display() {
			for(int i=0;i<=top;i++) {
				System.out.println(stack[i]);
			}
		}
	}

	 class day4Stack {

		public static void main(String[] args) {
			Stack m=new Stack(10);
			m.push(100);
			m.push(200);
			m.push(300);
			m.push(400);
			m.display();
			System.out.println("\nelement popped "+m.pop()+"\n");
			m.display();
		}
	}


