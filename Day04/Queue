package sample;

public class queue {
		int[] queue;
		int front;
		int rear;
		int capacity;
		
		public queue(int capacity) {
			queue=new int [capacity];
			this.capacity=capacity;
			front=0;rear=0;
		}
		
		public void enqueue(int element) {
			if(isFull()) {
				System.out.println("queue is full");
				return;
			}
			queue[rear++]=element;
		}
		public int dequeue() {
			if(isEmpty()) {
				System.out.println("queue is empty");
				return -1;
			}
			int element=queue[front++];
			return element;
		}
		public boolean isFull() {
			return rear==capacity;
		}
		public boolean isEmpty() {
			return front==rear;
		}
		public void display() {
			for(int i=front;i<rear;i++) {
				System.out.println(queue[i]);
			}
		}
	}


	class Test {

		public static void main(String[] args) {
			queue q=new queue(5);
			q.enqueue(10);
			q.enqueue(20);
			q.enqueue(30);
			q.enqueue(40);
			q.enqueue(50);
			q.display();
			System.out.println("\nelement removed "+q.dequeue()+"\n");
			q.display();
		}

	}


