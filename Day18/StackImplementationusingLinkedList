package com.vc;

public class StackImplementationusingLinkedList {
	    private class Node {
	        int data;
	        Node next;
	    }

	    private Node top;

	    // Push element
	    public void push(int x) {
	        Node newNode = new Node();
	        newNode.data = x;
	        newNode.next = top;
	        top = newNode;
	        System.out.println(x + " pushed to stack");
	    }

	    // Pop element
	    public int pop() {
	        if (top == null) {
	            System.out.println("Stack Underflow");
	            return -1;
	        }
	        int popped = top.data;
	        top = top.next;
	        return popped;
	    }

	    // Peek top element
	    public int peek() {
	        if (top == null) {
	            System.out.println("Stack is empty");
	            return -1;
	        }
	        return top.data;
	    }

	    // Display stack
	    public void display() {
	        if (top == null) {
	            System.out.println("Stack is empty");
	            return;
	        }
	        Node temp = top;
	        System.out.print("Stack: ");
	        while (temp != null) {
	            System.out.print(temp.data + " ");
	            temp = temp.next;
	        }
	        System.out.println();
	    }

	    public static void main(String[] args) {
	    	StackImplementationusingLinkedList stack = new StackImplementationusingLinkedList ();
	        stack.push(10);
	        stack.push(20);
	        stack.push(30);
	        stack.display();
	        System.out.println("Top element is: " + stack.peek());
	        System.out.println("Popped element: " + stack.pop());
	        stack.display();
	    }
	}

